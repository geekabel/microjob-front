[{"/home/godwin/Desktop/microjob-front/src/reportWebVitals.js":"1","/home/godwin/Desktop/microjob-front/src/App.js":"2","/home/godwin/Desktop/microjob-front/src/index.js":"3","/home/godwin/Desktop/microjob-front/src/components/auth/Signup.js":"4","/home/godwin/Desktop/microjob-front/src/components/Contact.js":"5","/home/godwin/Desktop/microjob-front/src/components/Search.js":"6"},{"size":362,"mtime":1610385458398,"results":"7","hashOfConfig":"8"},{"size":1402,"mtime":1610449790169,"results":"9","hashOfConfig":"8"},{"size":1049,"mtime":1610457644174,"results":"10","hashOfConfig":"8"},{"size":183,"mtime":1610448681748,"results":"11","hashOfConfig":"8"},{"size":177,"mtime":1610456780358,"results":"12","hashOfConfig":"8"},{"size":532,"mtime":1610457701614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11odnqq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/godwin/Desktop/microjob-front/src/reportWebVitals.js",[],["28","29"],"/home/godwin/Desktop/microjob-front/src/App.js",["30","31"],"\nimport React, { Component } from 'react'\nimport axios from 'axios';\nimport \"./App.css\";\nclass App extends  Component {\n  // State of your application\n  state = {\n    microjobs: [],\n    error: null,\n    query: '',\n  };\n\n  // Fetch your microjobs immediately after the component is mounted\n  componentDidMount = async () => {\n    try {\n      const response = await axios.get('http://localhost:1337/microjobs');\n      this.setState({ microjobs: response.data });\n    } catch (error) {\n      this.setState({ error });\n    }\n  };\n\n  render() {\n    const { error, microjob } = this.state;\n\n    // Print errors if any\n    if (error) {\n      return <div>Tu as fais: {error.message}</div>;\n    }\n\n    return (\n      \n      <div className=\"App container d-flex mx-2\">\n         {this.state.microjobs.map((microjob,id) => (\n           <div key={id} className=\"card taille \"> \n           <img className=\"card-img-top\" src={`http://localhost:1337${microjob.image.formats.thumbnail.url}`} alt=\"les thumnails\"/>\n\n            <h5>{microjob.title} -{microjob.location}</h5>\n\n            <div className=\"card-body\"> \n              <p className=\"card-text\">{microjob.description}</p>\n              <p><span>a partir de </span>{microjob.price} <span>FRCFA</span></p>\n              <h2 className=\"card-text\"></h2>\n            </div>\n            \n            </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;","/home/godwin/Desktop/microjob-front/src/index.js",[],"/home/godwin/Desktop/microjob-front/src/components/auth/Signup.js",[],"/home/godwin/Desktop/microjob-front/src/components/Contact.js",[],"/home/godwin/Desktop/microjob-front/src/components/Search.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":24,"column":20,"nodeType":"38","messageId":"39","endLine":24,"endColumn":28},{"ruleId":"40","severity":1,"message":"41","line":43,"column":15,"nodeType":"42","endLine":43,"endColumn":41},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'microjob' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]